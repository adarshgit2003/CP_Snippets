struct DSU{
    int n;
    vector<int> par, rank;  
    DSU(int _n){
        n=_n;
        par.resize(n+1);
        rank.resize(n+1, 0);
        iota(par.begin(), par.end(), 0);
    }
    int find(int x){
        if (x==par[x]) return x;
        return par[x]=find(par[x]);
    }
    bool Union(int x, int y){
        x=find(x);
        y=find(y);
        if (x==y) return 0;
        if (rank[x] < rank[y]) swap(x, y);
        par[y]=x;
        if (rank[x]==rank[y]) rank[x]++;
        return 1;
    }
};    